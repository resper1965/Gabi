version: "3.9"

# Gabi - Chat Multi-Agentes
# Versão simplificada para teste inicial

networks:
  gabi-network:
    driver: bridge
    name: gabi-network

volumes:
  gabi_postgres_data:
  gabi_redis_data:

services:
  # Banco de dados PostgreSQL + pgvector
  gabi-db:
    image: ankane/pgvector:latest
    container_name: gabi-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: gabi
      POSTGRES_PASSWORD: gabi_dev_secure_2024
      POSTGRES_DB: gabi_dev
    volumes:
      - gabi_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - gabi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gabi -d gabi_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache e sessões
  gabi-redis:
    image: redis:7-alpine
    container_name: gabi-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass gabi_redis_2024
    volumes:
      - gabi_redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - gabi-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Traefik - Proxy reverso
  gabi-traefik:
    image: traefik:v2.11
    container_name: gabi-traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--log.level=INFO"
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - gabi-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicação de teste
  gabi-test:
    image: nginx:alpine
    container_name: gabi-test
    restart: unless-stopped
    networks:
      - gabi-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gabi-test.rule=Host(`localhost`)"
      - "traefik.http.routers.gabi-test.entrypoints=web"
      - "traefik.http.services.gabi-test.loadbalancer.server.port=80"
